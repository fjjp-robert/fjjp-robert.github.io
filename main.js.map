{"version":3,"sources":["./src/app/features/lobby/pick-ban/pick-ban.component.html","./src/app/features/lobby/pick-ban/pick-ban.component.ts","./src/app/models/set.model.ts","./src/app/features/admin/admin.component.ts","./src/app/features/admin/admin.component.html","./src/app/features/home/home.component.ts","./src/app/features/home/home.component.html","./src/app/features/create-lobby/create-lobby-routing.module.ts","./src/app/services/set.service.ts","./src/environments/environment.ts","./src/app/services/region.service.ts","./src/app/features/lobby/lobby.module.ts","./src/app/models/region.model.ts","./src/app/shared/shared.module.ts","./src/app/features/home/home-routing.module.ts","./src/app/features/admin/admin-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/champion.model.ts","./src/app/features/admin/import-data/import-data.component.ts","./src/app/features/admin/import-data/import-data.component.html","./src/app/features/lobby/lobby.component.ts","./src/app/features/lobby/lobby.component.html","./src/app/app.module.ts","./src/app/features/create-lobby/create-lobby.module.ts","./src/app/services/champion.service.ts","./src/app/features/home/home.module.ts","./src/app/features/create-lobby/create-lobby.component.ts","./src/app/features/create-lobby/create-lobby.component.html","./src/app/services/auth.service.ts","./src/app/features/admin/header/header.component.ts","./src/app/features/admin/header/header.component.html","./src/app/shared/champions-list/champions-list.component.ts","./src/app/shared/champions-list/champions-list.component.html","./src/app/utils/constantes.utils.ts","./src/app/app-routing.module.ts","./src/app/features/lobby/lobby-routing.module.ts","./src/app/features/admin/admin.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/services/lobby.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div [ngClass]=\"{'bandeau-gauche': side==='left', 'bandeau-droite': side==='right'}\">\n  <div class=\"picks carbon\">\n    <!--<div class=\"row\" *ngFor=\"let champion of team.picks\">\n      <div class=\"row\">\n        <h5>Champion : {{ champion.name }}</h5>\n        <img class=\"img-fluid headerImg\" [src]=\"champion.fullArtsUrl[1]\" [alt]=\"champion.name\" />\n      </div>\n    </div>-->\n  \n    <div class=\"champion-card card m-1 text-white\" *ngFor=\"let champion of team.picks\">\n      <img class=\"card-img\" [src]=\"champion.fullArtsUrl[1]\" [alt]=\"champion.name\">\n      <div class=\"card-img-overlay-champion\">\n        <h5 class=\"\">\n          <img class=\"region-icon\" [src]=\"champion.region.iconUrl\" [alt]=\"champion.region.name\" />\n          <span style=\"vertical-align: middle;\">{{ champion.name }}</span>\n        </h5>\n      </div>\n    </div>\n  \n  </div>\n  <div class=\"bans m-1 row\" data-masonry='{\"percentPosition\": true }'>\n      <div class=\"card m-1 text-white champion-card-banned\" *ngFor=\"let champion of team.bans\">\n        <img class=\"card-img\" [src]=\"champion.fullArtsUrl[0]\" [alt]=\"champion.name\">\n        <div class=\"card-img-overlay-champion\">\n          <h5 class=\"\">\n            <img class=\"region-icon\" [src]=\"champion.region.iconUrl\" [alt]=\"champion.region.name\" />\n            <span class=\"name\" style=\"vertical-align: middle;\">{{ champion.name }}</span>\n          </h5>\n        </div>\n      </div>\n\n  \n  </div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Equipe } from 'src/app/models/equipe.model';\n\n@Component({\n  selector: 'app-pick-ban',\n  templateUrl: './pick-ban.component.html',\n  styleUrls: ['./pick-ban.component.scss']\n})\nexport class PickBanComponent implements OnInit {\n\n  // objet de Pick/Ban = Equipe\n  @Input() team: Equipe;\n  // objet de Pick/Ban = side (pour la classe)\n  @Input() side: String;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export class Set {\r\n  \r\n  constructor(\r\n    public ref:string, \r\n    public name:string, \r\n    public iconUrl:string) {}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Champion } from 'src/app/models/champion.model';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<app-header></app-header>\n<!--<div class=\"row justify-content-center\">\n  <app-champions-list (onClickChampion)=\"onClickChampion\" class=\"col col-7\"></app-champions-list>\n  <app-import-data class=\"col col-4\"></app-import-data>\n</div>-->\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Bienvenue !</p>\n<button routerLinkActive=\"active\" routerLink=\"/create-lobby\" >Creer un lobby</button>\n<button routerLinkActive=\"active\" routerLink=\"/admin/import-data\" >admin champions</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateLobbyComponent } from './create-lobby.component';\n\nconst routes: Routes = [\n  {\n    path: 'create-lobby',\n    component: CreateLobbyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CreateLobbyRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { Set } from '../models/set.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetService {\n\n  private noeudFireBaseSets = '/sets-list';\n\n  private sets: Set[] = [];\n  setsSubject = new Subject<Set[]>();\n\n  constructor() { }\n\n  getSets(): void {\n    // récupération en fonction de l'évenement 'value'\n    firebase.database().ref(this.noeudFireBaseSets)\n      .orderByChild('ref')\n      .on('value',\n        (data: firebase.database.DataSnapshot) => {\n          this.sets = (data && data.val()) ? data.val() : [];\n          this.emitSets();\n        });\n  }\n\n  importOrUpdateSets(setsToImport: Set[]): void {\n    let newSetsArray = [... this.sets];\n\n    setsToImport.forEach((set: Set) => {\n      let setTrouve = newSetsArray.find(reg => reg.ref === set.ref);\n      // si on trouve le set déjà existant, on le remplace\n      if (setTrouve) {\n        newSetsArray[newSetsArray.indexOf(setTrouve)] = set;\n      } else {\n        newSetsArray.push(set)\n      }\n    });\n\n    this.sets = newSetsArray;\n    this.emitSets();\n  }\n\n  emitSets(): void {\n    this.setsSubject.next(this.sets);\n  }\n  saveSets(): void {\n    // sauvegarde du tableau régions dans le noeud sets de la base de données \n    firebase.database().ref(this.noeudFireBaseSets).set(this.sets);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Region } from '../models/region.model';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionService {\n\n  private noeudFireBaseRegions = '/regions-list';\n\n  private regions: Region[] = [];\n  regionsSubject = new Subject<Region[]>();\n\n  constructor() { }\n\n  getRegions(): void {\n    // récupération en fonction de l'évenement 'value'\n    firebase.database().ref(this.noeudFireBaseRegions)\n      .on('value',\n        (data: firebase.database.DataSnapshot) => {\n          this.regions = (data && data.val()) ? data.val() : [];\n          this.emitRegions();\n        });\n  }\n\n  importOrUpdateRegions(regionsToImport: Region[]): void {\n    let newRegionsArray = [... this.regions];\n\n    regionsToImport.forEach((region: Region) => {\n      let regionTrouvee = newRegionsArray.find(reg => reg.ref === region.ref);\n      // si on trouve la région déjà existante, on la remplace\n      if (regionTrouvee) {\n        newRegionsArray[newRegionsArray.indexOf(regionTrouvee)] = region;\n      } else {\n        newRegionsArray.push(region)\n      }\n    });\n\n    this.regions = newRegionsArray;\n    this.emitRegions();\n  }\n\n  emitRegions(): void {\n    this.regionsSubject.next(this.regions);\n  }\n  saveRegions(): void {\n    // sauvegarde du tableau régions dans le noeud regions de la base de données \n    firebase.database().ref(this.noeudFireBaseRegions).set(this.regions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LobbyComponent } from './lobby.component';\nimport { LobbyRoutingModule } from './lobby-routing.module';\nimport { PickBanComponent } from './pick-ban/pick-ban.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    LobbyComponent,\n    PickBanComponent\n  ],\n  imports: [\n    CommonModule,\n    LobbyRoutingModule,\n    SharedModule\n  ]\n})\nexport class LobbyModule { }\n","export class Region {\r\n  \r\n  constructor(\r\n    public ref:string, \r\n    public name:string, \r\n    public iconUrl:string) {}\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChampionsListComponent } from './champions-list/champions-list.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [\n    ChampionsListComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule\n  ],\n  exports:[\n    ChampionsListComponent\n  ]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes:Routes = [\n  // redirection auto si le chemin est la racine. /!\\ il faut spécifier le pathMatch si c'est la route vide pour un redirect\n  { path: 'home', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LobbyComponent } from '../lobby/lobby.component';\nimport { AdminComponent } from './admin.component';\nimport { ImportDataComponent } from './import-data/import-data.component';\n\nconst routes: Routes = [\n  {\n    path: 'admin',\n    component: AdminComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'test',\n        pathMatch:'full'\n      },\n      {\n        path: 'import-data',\n        component: ImportDataComponent\n      },\n      {\n        path: 'test',\n        component: LobbyComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport firebase from 'firebase'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'pick-ban-runeterra';\n\n  constructor(private router:Router) {\n    var firebaseConfig = {\n      apiKey: \"AIzaSyDXu1zNfTqti1GNrnfNYyeVThaxTztnLQY\",\n      authDomain: \"pick-ban-lor.firebaseapp.com\",\n      projectId: \"pick-ban-lor\",\n      storageBucket: \"pick-ban-lor.appspot.com\",\n      messagingSenderId: \"203495297536\",\n      appId: \"1:203495297536:web:0954202c103656bac87ee5\"\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  /*ngOnInit(): void {\n    console.log('test');\n    //this.router.navigate(['home'], {queryParamsHandling:'preserve'});\n  }*/\n}\n","<router-outlet></router-outlet>","import { Region } from \"./region.model\";\r\n\r\nexport class Champion {\r\n  isActive:boolean = true;\r\n  \r\n  constructor(\r\n    public cardRef:string, \r\n    public name:string, \r\n    public region:Region,\r\n    public set:string, \r\n    public fullArtsUrl:string[], \r\n    public cardsRefLvlSup:string[]) {}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Champion } from 'src/app/models/champion.model';\nimport { Region } from 'src/app/models/region.model';\nimport { Set } from 'src/app/models/set.model';\nimport { ChampionService } from 'src/app/services/champion.service';\nimport { RegionService } from 'src/app/services/region.service';\nimport { SetService } from 'src/app/services/set.service';\nimport { Constantes } from 'src/app/utils/constantes.utils';\n\n@Component({\n  selector: 'app-import-data',\n  templateUrl: './import-data.component.html',\n  styleUrls: ['./import-data.component.scss']\n})\nexport class ImportDataComponent implements OnInit {\n\n  contenuFichier: string;\n  mapChampionsByFiles:Map<string, Champion[]> = new Map();\n  mapErrorsByFiles:Map<string, string> = new Map();\n\n  mapErrorsByFilesRegion:Map<string, string> = new Map();\n  regionExtraites:Region[];\n\n  setsExtraits:Set[];\n\n  constructor(private championService: ChampionService, private regionService:RegionService, private setService:SetService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onSaveChampions(): void {\n    this.championService.saveChampions();\n  }\n\n  onSaveRegionsSets(): void {\n    this.regionService.saveRegions();\n    this.setService.saveSets();\n  }\n\n  readSetJson(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const files = target.files as FileList;\n    // pour chaque fichiers insérés\n    for (var i = 0; i < files.length; i++) { \n      let file = files[i];\n      if (file) {\n        // vérifier le pattern du nom ?\n        if (file.name.startsWith('set')) {\n  \n          var reader = new FileReader();\n          reader.readAsText(file, \"UTF-8\");\n          // au chargement du fichier on appelle la conversion en champions et on met à jour la liste.\n          reader.onload = (evt: ProgressEvent<FileReader>) => {\n            let setJson: string = evt.target.result.toString();\n            const cartes: any[] = JSON.parse(setJson);\n            this.contenuFichier = setJson;\n            let extractedChampions = this.extractAndConvertCardInfosForChampions(cartes);\n            console.log(files);\n            this.mapChampionsByFiles.set(file.name, [ ...extractedChampions.values() ]);\n            console.log(this.mapChampionsByFiles);\n            this.championService.importOrUpdateChampions(extractedChampions);\n          }\n          reader.onerror = (evt: ProgressEvent<FileReader>) => {\n            console.log('error reading file');\n            this.mapErrorsByFiles.set(file.name, \"erreur à la lecture du fichier\");\n          }\n        }\n      }\n    }\n  }\n\n  // lecture du core.json\n  readCoreJson(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const files = target.files as FileList;\n    let file = files[0];\n    if (file) {\n      // vérifier le pattern du nom ?\n      if (file.name.startsWith('globals')) {\n        var reader = new FileReader();\n        reader.readAsText(file, \"UTF-8\");\n        // au chargement du fichier on appelle l'extraction des régions et on met à jour la liste.\n        reader.onload = (evt: ProgressEvent<FileReader>) => {\n          let coreJson: string = evt.target.result.toString();\n\n          this.extractRegions(coreJson);\n          this.extractSets(coreJson);\n        }\n        reader.onerror = (evt: ProgressEvent<FileReader>) => {\n          console.log('error reading file');\n          this.mapErrorsByFiles.set(file.name, \"erreur à la lecture du fichier\");\n        }\n      }\n    }\n  }\n\n  extractRegions(coreJson:string):void {\n    //let coreJson: string = evt.target.result.toString();\n    const regionsInput: any[] = JSON.parse(coreJson).regions;\n    //console.log(regionsInput);\n\n    let regions:Region[] = regionsInput.map(input => {\n      return new Region(input.nameRef, input.name, this.buildRegionAssetUrl(input.nameRef));\n    });\n    //console.log(regions);\n    this.regionService.importOrUpdateRegions(regions);\n\n    this.regionExtraites = regions;\n    //console.log(regions);\n  }\n\n  extractSets(coreJson:string):void {\n    //let coreJson: string = evt.target.result.toString();\n    const setsInput: any[] = JSON.parse(coreJson).sets;\n    //console.log(regionsInput);\n\n    let sets:Set[] = setsInput.map(input => {\n      return new Set(input.nameRef, input.name, this.buildSetAssetUrl(input.nameRef));\n    });\n\n    const comparatorBySetRef = (set1:Set, set2:Set) => (set1.ref > set2.ref) ? 1 : ((set2.ref > set1.ref) ? -1 : 0);\n    //console.log(sets);\n    sets = sets.sort(comparatorBySetRef);\n    //console.log(sets);\n    this.setService.importOrUpdateSets(sets);\n\n    this.setsExtraits = sets;\n  }\n\n  extractAndConvertCardInfosForChampions(cards: any[]): Map<string, Champion> {\n\n    // pour trouver les champions on prend les cartes collectionnables de supertype champion qui n'ont pas de spellSpeedRef ~ pas un sort \n    // on fait ça car le type dépend de la langue du fichier (\"Unit\" en en_us et \"Unité\" en fr_fr)\n    const isCarteChampionLvl1 = card => card.supertype === 'Champion' && card.spellSpeedRef === '' && card.collectible;\n    // pour les lvls supp même condition hors collectionnable\n    const isCarteChampionLvlSup = card => card.supertype === 'Champion' && card.spellSpeedRef === '' && !card.collectible;\n\n    let regions:Region[] = [];\n\n    let mapChampions: Map<string,Champion> = new Map();\n    cards\n      .filter(isCarteChampionLvl1)\n      .map(\n        championCard => {\n          // on filtre les cartes associées au champion et on vérifie qu'elles sont de niveau supp\n          const lvlUpCardCodes: string[] = cards\n            .filter(card2 => championCard.associatedCardRefs.includes(card2.cardCode) && isCarteChampionLvlSup(card2))\n            .map(lvlUpCard => lvlUpCard.cardCode);\n\n          const cardCodesForAssets = [championCard.cardCode, ...lvlUpCardCodes];\n          const set = championCard.set.toLowerCase();\n\n          const assetsUrl: string[] = cardCodesForAssets.map(code => this.buildCardAssetUrl(set, code));\n\n          let regionTrouvee = regions.find(region =>  region.ref === championCard.regionRef);\n          if (!regionTrouvee) {\n            regionTrouvee = new Region(championCard.regionRef, championCard.region, this.buildRegionAssetUrl(championCard.regionRef));\n            regions.push(regionTrouvee);\n          }\n          mapChampions.set(championCard.cardCode, new Champion(championCard.cardCode, championCard.name, regionTrouvee, championCard.set, assetsUrl, lvlUpCardCodes));\n        }\n      );\n    \n    console.log(mapChampions);\n    return mapChampions;\n  }\n\n  /**\n   * Construction de l'url de la carte (full illustration par défaut) \n   */\n  buildCardAssetUrl(set: string, cardCode: string, full: boolean = true): string {\n    let fullStr = full ? '-full' : '';\n    return `${Constantes.urlDataDragon}${set}/fr_fr/img/cards/${cardCode}${fullStr}.png`;\n  }\n\n  buildRegionAssetUrl(regionRef: string): string {\n    return `${Constantes.urlDataDragon}core/fr_fr/img/regions/icon-${regionRef.toLowerCase()}.png`;\n  }\n\n  buildSetAssetUrl(setRef: string): string {\n    return `${Constantes.urlDataDragon}core/fr_fr/img/sets/${setRef.toLowerCase()}.png`;\n  }\n\n  /*onClickChampion(champion:Champion) {\n    console.log(champion.name);\n  }*/\n\n}\n","<div class=\"row justify-content-center\">\n  <!--[onClickChampion]=\"onClickChampion\"-->\n  <app-champions-list  class=\"col col-7\"></app-champions-list>\n  <div class=\"col col-4\">\n    <fieldset class=\"fieldset-import rounded\">\n      <legend class=\"legend-import\">Importer les champions</legend>\n      <div class=\"form-group\">\n        <p>Choisissez les fichiers à importer (exemple <b>set1-fr_fr.json</b>)</p>\n        <input type=\"file\" class=\"form-control-file\" accept=\"application/JSON\" multiple\n          (change)=\"readSetJson($event)\" />\n      </div>\n      <p class='text-success' *ngFor=\"let entry of mapChampionsByFiles | keyvalue\">succès : {{ entry.key }} --> {{\n        entry.value.length }} champions extraits</p>\n      <p class='text-danger' *ngFor=\"let entry of mapErrorsByFiles | keyvalue\">Erreur : {{ entry.key }} --> {{\n        entry.value }}</p>\n      <button class=\"btn btn-success\" (click)=\"onSaveChampions()\"\n        [ngClass]=\"{'disabled': !mapChampionsByFiles}\">Sauvegarder les champions extraits</button>\n    </fieldset>\n    <fieldset class=\"fieldset-import rounded\">\n      <legend class=\"legend-import\">Importer les régions/sets</legend>\n      <div class=\"form-group\">\n        <p>Choisissez le fichier à importer (exemple <b>globals-fr_fr.json</b>)</p>\n        <input type=\"file\" class=\"form-control-file\" accept=\"application/JSON\" (change)=\"readCoreJson($event)\" />\n        <p class='text-success' *ngIf=\"regionExtraites\">succès : {{ regionExtraites.length }} régions extraites</p>\n        <p class='text-success' *ngIf=\"setsExtraits\">succès : {{ setsExtraits.length }} sets extraits</p>\n      </div>\n      <button class=\"btn btn-success\" (click)=\"onSaveRegionsSets()\"\n        [ngClass]=\"{'disabled': !regionExtraites}\">Sauvegarder les régions/sets extraits</button>\n    </fieldset>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Champion } from 'src/app/models/champion.model';\nimport { Lobby } from 'src/app/models/lobby.model';\nimport { ChampionService } from 'src/app/services/champion.service';\nimport { LobbyService } from 'src/app/services/lobby.service';\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.scss']\n})\nexport class LobbyComponent implements OnInit {\n  \n  lobby: Lobby;\n  lobbySubscription: Subscription;\n\n  selectedChampionSubscription :Subscription;\n\n  //getCurrent\n  \n\n  constructor(private lobbyService: LobbyService, private championService:ChampionService, private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const refLobby:string = this.route.snapshot.params['lobbyId'];\n\n    this.lobbySubscription = this.lobbyService.lobbyCourantSubject.subscribe(\n      (lobby: Lobby) => {\n        this.lobby = lobby;\n        console.log(\"lobby chargé \");\n        console.log(this.lobby.teamA);\n        if (!this.lobby.teamA.bans) {\n          this.lobby.teamA.bans =[];\n        }\n        if (!this.lobby.teamA.picks) {\n          this.lobby.teamA.picks =[];\n        }\n      }\n    );\n\n    this.selectedChampionSubscription = this.championService.selectedChampionSubject.subscribe(\n      (champion: Champion) => {\n        console.log(\"subscription selected\");\n        if (champion) {\n          console.log(\"selected champion : \" + champion.name);\n\n          if (this.lobby.teamA.picks.length < 6) {\n          // TODO : get current step\n          this.lobby.teamA.picks.push(champion);\n          } else {\n            this.lobby.teamA.bans.push(champion);\n          }\n\n        }\n      }\n    );\n\n    this.lobbyService.getLobbyCourantByRef(refLobby);\n  }\n\n\n\n  onClickChampion(champion: Champion): void {\n    console.log(champion.name);\n\n    let choixConfirme:boolean = confirm(`Do you confirm your choice : ${champion.name} ?`).valueOf();\n    if (choixConfirme) {\n      console.log('confirmé');\n      console.log( this.lobby);\n      this.championService.selectChampion(champion);\n    }\n  }\n}\n","<div class=\"col \">\n<div class=\"row\">\n  <h2>ici, mettre les noms des joueurs etc.</h2>\n</div>\n<div class=\"row\">\n  <app-pick-ban side=\"left\" [team]=\"lobby.teamA\"></app-pick-ban>\n  <!--<div class=\"bandeau-gauche border\"></div>-->\n  <app-champions-list [onClickChampion]=\"onClickChampion\" style=\"max-width:70%\"></app-champions-list>\n  <!--<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-sm\">Small modal</button>-->\n  <app-pick-ban side=\"right\" [team]=\"lobby.teamB\"></app-pick-ban>\n  <!--<div class=\"bandeau-droite border\"></div>-->\n</div>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthService } from './services/auth.service';\nimport { ChampionService } from './services/champion.service';\nimport { LobbyService } from './services/lobby.service';\nimport { RegionService } from './services/region.service';\nimport { SetService } from './services/set.service';\nimport { SharedModule } from './shared/shared.module';\nimport { HomeModule } from './features/home/home.module';\nimport { HomeRoutingModule } from './features/home/home-routing.module';\nimport { LobbyRoutingModule } from './features/lobby/lobby-routing.module';\nimport { AdminRoutingModule } from './features/admin/admin-routing.module';\nimport { AdminModule } from './features/admin/admin.module';\nimport { LobbyModule } from './features/lobby/lobby.module';\nimport { CreateLobbyModule } from './features/create-lobby/create-lobby.module';\nimport { CreateLobbyRoutingModule } from './features/create-lobby/create-lobby-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HomeRoutingModule,\n    AdminRoutingModule,\n    LobbyRoutingModule,\n    CreateLobbyRoutingModule,\n    AppRoutingModule,\n    SharedModule,\n    HomeModule,\n    AdminModule,\n    LobbyModule,\n    CreateLobbyModule\n  ],\n  providers: [\n    ChampionService,\n    AuthService,\n    RegionService,\n    SetService,\n    LobbyService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateLobbyRoutingModule } from './create-lobby-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CreateLobbyRoutingModule\n  ]\n})\nexport class CreateLobbyModule { }\n","import { Injectable } from '@angular/core';\nimport { Champion } from '../models/champion.model';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChampionService {\n  private noeudFireBaseChampions = '/map-champions';\n\n  private champions: Map<string, Champion> = new Map();\n  championsSubject = new Subject<Map<string, Champion>>();\n\n  private selectedChampion: Champion | undefined;\n  selectedChampionSubject = new Subject<Champion>();\n\n  constructor() { }\n\n  getChampions(): void {\n    firebase.database().ref(this.noeudFireBaseChampions)\n      .orderByKey()\n      .on('value',\n        (data: firebase.database.DataSnapshot) => {\n          this.champions = (data && data.val()) ? new Map(Object.entries(data.val())) : new Map();\n          console.log('chargement champions')\n          console.log(this.champions)\n          this.emitChampions();\n        });\n  }\n\n  getChampionByCardRef(cardRef: string): Promise<Champion> {\n    return new Promise(\n      (resolve, reject) => {\n        firebase.database().ref(`${this.noeudFireBaseChampions}/${cardRef}`).once('value').then(\n          (data) => {\n            resolve(data.val());\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  emitChampions(): void {\n    this.championsSubject.next(this.champions);\n  }\n\n  emitSelectedChampion(): void {\n    this.selectedChampionSubject.next(this.selectedChampion);\n  }\n\n  saveChampions(): void {\n    // sauvegarde du tableau champions dans le noeud champions de la base de données \n    // (connexion directe contrairement à \n    // l'autre projet où l'on appelait des requêtes http)\n    firebase.database().ref(this.noeudFireBaseChampions).set(Object.fromEntries(this.champions));\n  }\n\n  updateOneChampion(champion: Champion): void {\n    if (champion) {\n      // sauvegarde du champion dans le noeud correspondant\n      firebase.database().ref(`${this.noeudFireBaseChampions}/${champion.cardRef}`).set(champion);\n    }\n  }\n\n  /** \n   * ajout/mise à jour de la map des champions.\n   * ne met pas à jour la base de données, mais remplace les champions dans la map champions\n   */\n  importOrUpdateChampions(mapChampionsToImport: Map<string, Champion>): void {\n\n    mapChampionsToImport.forEach((val, key) => {\n      this.champions.set(key, val);\n    });\n\n    console.log('testtest : ' + this.champions);\n    this.emitChampions();\n  }\n\n\n\n  selectChampion(champion: Champion): void {\n\n    this.selectedChampion = champion;\n    this.emitSelectedChampion();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    SharedModule\n  ]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-lobby',\n  templateUrl: './create-lobby.component.html',\n  styleUrls: ['./create-lobby.component.scss']\n})\nexport class CreateLobbyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>create-lobby works!</p>\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  // création d'un nouvel utilisateur avec email password\n  createNewUser(email:string, password:string) {\n    // promise car l'appel à firebase prend du temps => méthode asynchrone\n    return new Promise(\n      (resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(\n          (userCredential) => {\n            resolve(userCredential);\n          }, \n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  signInUserWithEmailAndPassword(email:string, password:string) {\n    // promise car l'appel à firebase prend du temps => méthode asynchrone\n    return new Promise(\n      (resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(\n          (userCredential) => {\n            resolve(userCredential);\n          }, \n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  signInUserAnonymously() {\n    // promise car l'appel à firebase prend du temps => méthode asynchrone\n    return new Promise(\n      (resolve, reject) => {\n        firebase.auth().signInAnonymously().then(\n          (userCredential) => {\n            resolve(userCredential);\n          }, \n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  signOutUser() {\n    firebase.auth().signOut();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport firebase from 'firebase'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  isAuth:boolean;\n  userConnecte:string;\n\n  constructor(private authService:AuthService) { }\n\n  ngOnInit(): void {\n    firebase.auth().onAuthStateChanged(\n      (user) => {\n        if (user) {\n          this.isAuth = true;\n          this.userConnecte = user.uid;\n        } else {\n          this.isAuth = false\n          this.userConnecte = undefined;\n        }\n      }\n    );\n  }\n\n  onSignInAnonymously():void {\n    this.authService.signInUserAnonymously();\n  }\n\n  onSignOut():void {\n    this.authService.signOutUser();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container-fluid\">\n    <ul class=\"nav navbar-nav mr-auto\">\n      <!--<li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/champions-list\">Champions</a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/create-lobby\">Créer un Lobby</a></li>-->\n      <li class=\"nav-item\"><a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/admin/import-data\">Importer ou Mettre à jour les données</a></li>\n    </ul>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"nav-item\" *ngIf=\"!isAuth\"><a class=\"nav-link\" (click)=\"onSignInAnonymously()\"><span class=\"glyphicon glyphicon-log-in\"></span> Se connecter</a></li>\n      <li class=\"nav-item\" *ngIf=\"isAuth\"><a class=\"nav-link\" (click)=\"onSignOut()\"><span class=\"glyphicon glyphicon-log-in\"></span> Se déconnecter</a></li>\n    </ul>\n  </div>\n</nav>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { Champion } from \"src/app/models/champion.model\";\nimport { Region } from \"src/app/models/region.model\";\nimport { Set } from \"src/app/models/set.model\";\nimport { ChampionService } from \"src/app/services/champion.service\";\nimport { RegionService } from \"src/app/services/region.service\";\nimport { SetService } from \"src/app/services/set.service\";\n\n\n@Component({\n  selector: 'app-champions-list',\n  templateUrl: './champions-list.component.html',\n  styleUrls: ['./champions-list.component.scss']\n})\nexport class ChampionsListComponent implements OnInit, OnDestroy {\n\n  loading: boolean = true;\n\n  champions: Map<string, Champion> = new Map();\n  filteredChampions: Map<string, Champion> = new Map();\n  championsSubscription: Subscription = Subscription.EMPTY;\n\n  regions: Region[] = [];\n  regionsSubscription: Subscription = Subscription.EMPTY;\n\n  sets: Set[] = [];\n  setsSubscription: Subscription = Subscription.EMPTY;\n\n  // default fonction : console log du nom\n  @Input() onClickChampion: (args: Champion) => void = this.onDetailsChampion; \n\n  \n\n  constructor(private championService: ChampionService, private regionService: RegionService, private setService: SetService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.championsSubscription = this.championService.championsSubject.subscribe(\n      (champions: Map<string, Champion>) => {\n        this.champions = champions;\n        this.filteredChampions = champions;\n        console.log('juste avant de faire true');\n        this.loading = false;\n      }\n    );\n\n    this.regionsSubscription = this.regionService.regionsSubject.subscribe(\n      (regions: Region[]) => {\n        this.regions = regions;\n      }\n    );\n\n    this.setsSubscription = this.setService.setsSubject.subscribe(\n      (sets: Set[]) => {\n        this.sets = sets;\n      }\n    );\n\n    // récupération des champions en base\n    this.championService.getChampions();\n    this.regionService.getRegions();\n    this.setService.getSets();\n  }\n\n  ngOnDestroy(): void {\n    this.regionsSubscription.unsubscribe();\n    this.setsSubscription.unsubscribe();\n    this.championsSubscription.unsubscribe();\n  }\n\n  onDetailsChampion(champion: Champion): void {\n    //this.router.navigate(['/champion', champion.cardRef]);\n    //this.onClickChampion(champion);\n    console.log(champion.name);\n  }\n\n  /** mécanique de filtre par une région, possibilité de stocker la région dans une liste pour filtrer par plusieurs régions */\n  onFilterByRegion(region: Region) {\n    // on utilise la technique sioux consistant à transformer la map \n    // en array [K,V] avec [... map] en retransformant en map après\n    this.filteredChampions = new Map(\n      [...this.champions]\n        .filter(([cardRef, champion]) => champion.region.ref === region.ref)\n    );\n  }\n\n  /** mécanique de filtre par une région, possibilité de stocker la région dans une liste pour filtrer par plusieurs régions */\n  onFilterBySet(set: Set) {\n    // on utilise la technique sioux consistant à transformer la map \n    // en array [K,V] avec [... map] en retransformant en map après\n    this.filteredChampions = new Map(\n      [...this.champions]\n        .filter(([cardRef, champion]) => champion.set === set.ref)\n    );\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"loader d-flex justify-content-center\" [class]=\"{'hidden': !loading}\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n  <div [class]=\"{'col-xs-12':true, 'hidden': loading}\">\n    <h2>Champions</h2>\n    <div class=\"border rounded mb-3 p-3 bloc-filtres\">\n      <h6>Filtrer</h6>\n      <div class=\"d-flex justify-content-start\">\n        <div class=\"mr-2\">\n          <label class=\"mr-2\">Filtrer par région : </label>\n          <span *ngFor=\"let region of regions\" (click)=\"onFilterByRegion(region)\"><img *ngIf=\"region\"\n              class=\"region-icon border rounded-circle\" [alt]=\"region.name\" [src]=\"region.iconUrl\"></span>\n        </div>\n        <div>\n          <label class=\"mr-2\">Filtrer par set : </label>\n          <span *ngFor=\"let set of sets\" (click)=\"onFilterBySet(set)\"><img *ngIf=\"set\"\n              class=\"set-icon border rounded-circle\" [alt]=\"set.name\" [src]=\"set.iconUrl\"></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"bloc-champions overflow-auto p-2 m-1 row\" data-masonry='{\"percentPosition\": true }' style=\"max-height: 500px;\">\n      <div class=\"card m-2 champion-card text-white\" *ngFor=\"let entryChampion of filteredChampions | keyvalue\"\n        (click)=\"onClickChampion(entryChampion.value)\" style=\"cursor: pointer;\">\n        <div class=\" text-white\">\n          <img class=\"card-img\" [src]=\"entryChampion.value.fullArtsUrl[0]\" [alt]=\"entryChampion.value.name\">\n          <div class=\"card-img-overlay-champion\">\n            <h5 class=\"\">\n              <img class=\"region-icon\" [src]=\"entryChampion.value.region.iconUrl\"\n                [alt]=\"entryChampion.value.region.name\" />\n              <span style=\"vertical-align: middle;\">{{ entryChampion.value.name }}</span>\n              <img class=\"set-icon border rounded-circle\"\n                src=\"https://dd.b.pvp.net/latest/core/en_us/img/sets/{{entryChampion.value.set | lowercase}}.png\"\n                [alt]=\"entryChampion.value.set\" />\n            </h5>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","export const Constantes = {\r\n\r\n  urlDataDragon: 'https://dd.b.pvp.net/latest/',\r\n  routeChampionsList : 'champions-list'\r\n  \r\n\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './features/home/home.component';\nimport { ChampionsListComponent } from './shared/champions-list/champions-list.component';\nimport { Constantes } from './utils/constantes.utils';\n\nconst routes: Routes = [\n  { path: Constantes.routeChampionsList, component: ChampionsListComponent },\n  { path: '', redirectTo : '/home', pathMatch: 'full'},\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LobbyComponent } from './lobby.component';\n\nconst routes:Routes = [\n  { path: 'lobby/:lobbyId', component: LobbyComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LobbyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { ImportDataComponent } from './import-data/import-data.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AdminComponent,\n    ImportDataComponent,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { Lobby } from '../models/lobby.model';\nimport { Champion } from '../models/champion.model';\nimport { Step } from '../models/step.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LobbyService {\n\n  private noeudFireBaseLobbies = '/map-lobbies';\n\n  private lobbies: Map<string, Lobby> = new Map();\n  lobbiesSubject = new Subject<Map<string, Lobby>>();\n\n  private lobbyCourant: Lobby;\n  lobbyCourantSubject = new Subject<Lobby>();\n\n\n  constructor() { }\n\n  getLobbies(): void {\n    firebase.database().ref(this.noeudFireBaseLobbies)\n    .orderByKey()\n    .on('value',\n      (data: firebase.database.DataSnapshot) => {\n        this.lobbies = (data && data.val()) ? new Map(Object.entries(data.val())) : new Map();\n        console.log('chargement lobbies')\n        console.log(this.lobbies)\n        this.emitLobbies();\n      });\n  }\n\n  getLobbyCourantByRef(refLobby: string): void {\n    firebase.database().ref(`${this.noeudFireBaseLobbies}/${refLobby}`)\n    .on('value',\n      (data: firebase.database.DataSnapshot) => {\n        this.lobbyCourant = (data && data.val()) ? data.val() : {};\n        console.log('chargement lobby courant')\n        console.log(this.lobbyCourant)\n        this.emitLobbyCourant();\n      });\n  }\n\n  getLobbyByRef(refLobby: string): Promise<Lobby> {\n    return new Promise(\n      (resolve, reject) => {\n        firebase.database().ref(`${this.noeudFireBaseLobbies}/${refLobby}`)\n        .once('value').then(\n          (data) => {\n            resolve(data.val());\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  emitLobbies(): void {\n    this.lobbiesSubject.next(this.lobbies);\n  }\n  emitLobbyCourant(): void {\n    this.lobbyCourantSubject.next(this.lobbyCourant);\n  }\n\n  saveLobbies(): void {\n    // (connexion directe contrairement à \n    // l'autre projet où l'on appelait des requêtes http)\n    firebase.database().ref(this.noeudFireBaseLobbies).set(Object.fromEntries(this.lobbies));\n  }\n\n  saveOrUpdateLobby(lobby:Lobby): void {\n      if(!lobby.refLobby) {\n        lobby.refLobby = this.genererNewCleLobby();\n        \n        // alimentation de l'ordre des étapes\n        for(let i=0; i<lobby.pickBanSteps.length;i++) {\n          const step:Step = lobby.pickBanSteps[i];\n          step.order = i;\n        }\n\n        lobby.teamA.picks = [];\n        lobby.teamA.bans = [];\n        lobby.teamB.picks = [];\n        lobby.teamB.bans = [];\n      }\n\n      // sauvegarde du lobby dans le noeud correspondant\n      firebase.database().ref(`${this.noeudFireBaseLobbies}/${lobby.refLobby}`).set(lobby);\n  }\n\n  genererNewCleLobby(): string {\n    \n    let now:Date = new Date();\n    let timeStampNow:number = Date.now();\n    const random = Math.floor(Math.random()*255)\n\n    // on additionne le nombre entre 0 et 255 généré avec le timestamp pour avoir un nombre unique\n    let newKey:string = `Lobby${now.getFullYear()}${now.getMonth()}${now.getDate()}${timeStampNow+random}`;\n\n    return newKey;\n  }\n\n  /** \n   * ajout/mise à jour de la map des champions.\n   * ne met pas à jour la base de données, mais remplace les champions dans la map champions\n   */\n  /*importOrUpdateChampions(mapChampionsToImport: Map<string, Champion>): void {\n\n    mapChampionsToImport.forEach((val, key) => {\n      this.lobbies.set(key, val);\n    });\n\n    console.log('testtest : ' + this.lobbies);\n    this.emitChampions();\n  }*/\n\n\n    /*\n    ON VEUT :\n\n    avoir une liste d'étapes.\n    récupérer l'étape courante pour faire choisir à telle ou telle équipe. \n    l'autre équipe ne doit rien pouvoir faire en attendant\n    *reset le timer au retour BDD*\n    avoir un historique des actions \n\n\n    */\n\n\n\n\n  \n}\n"],"sourceRoot":"webpack:///"}